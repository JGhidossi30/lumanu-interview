{"ast":null,"code":"var _JSON$parse;\n\nimport getResultsReducer from './reducer/get-results';\nimport types from './types';\nconst initialState = {\n  loaders: {\n    queryLoading: false\n  },\n  releaseNotes: '',\n  repos: (_JSON$parse = JSON.parse(localStorage.getItem('repos'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [],\n  results: [],\n  query: ''\n};\nexport const addRepo = (state, {\n  repo\n}) => {\n  const repos = [...state.repos, repo];\n  localStorage.setItem('repos', JSON.stringify(repos));\n  return { ...state,\n    repos\n  };\n};\nexport const setQuery = (state, {\n  query\n}) => ({ ...state,\n  query\n});\nconst reducer = {\n  [types.ADD_REPO]: addRepo,\n  [types.SET_QUERY]: setQuery,\n  ...getResultsReducer\n};\nexport default ((state = initialState, action = {}) => reducer[action.type] ? reducer[action.type](state, action) : state);","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/modules/search/reducer.js"],"names":["getResultsReducer","types","initialState","loaders","queryLoading","releaseNotes","repos","JSON","parse","localStorage","getItem","results","query","addRepo","state","repo","setItem","stringify","setQuery","reducer","ADD_REPO","SET_QUERY","action","type"],"mappings":";;AAAA,OAAOA,iBAAP,MAA8B,uBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,YAAY,EAAE;AADT,GADQ;AAIjBC,EAAAA,YAAY,EAAE,EAJG;AAKjBC,EAAAA,KAAK,iBAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAF,qDAA+C,EALnC;AAMjBC,EAAAA,OAAO,EAAE,EANQ;AAOjBC,EAAAA,KAAK,EAAE;AAPU,CAArB;AAUA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQ;AAACC,EAAAA;AAAD,CAAR,KAAmB;AACtC,QAAMT,KAAK,GAAG,CAAC,GAAGQ,KAAK,CAACR,KAAV,EAAiBS,IAAjB,CAAd;AACAN,EAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BT,IAAI,CAACU,SAAL,CAAeX,KAAf,CAA9B;AACA,SAAQ,EACJ,GAAGQ,KADC;AAEJR,IAAAA;AAFI,GAAR;AAIH,CAPM;AASP,OAAO,MAAMY,QAAQ,GAAG,CAACJ,KAAD,EAAQ;AAACF,EAAAA;AAAD,CAAR,MAAqB,EAAC,GAAGE,KAAJ;AAAWF,EAAAA;AAAX,CAArB,CAAjB;AAEP,MAAMO,OAAO,GAAG;AACZ,GAAClB,KAAK,CAACmB,QAAP,GAAkBP,OADN;AAEZ,GAACZ,KAAK,CAACoB,SAAP,GAAmBH,QAFP;AAGZ,KAAGlB;AAHS,CAAhB;AAMA,gBAAe,CAACc,KAAK,GAAGZ,YAAT,EAAuBoB,MAAM,GAAG,EAAhC,KAAuCH,OAAO,CAACG,MAAM,CAACC,IAAR,CAAP,GAAuBJ,OAAO,CAACG,MAAM,CAACC,IAAR,CAAP,CAAqBT,KAArB,EAA4BQ,MAA5B,CAAvB,GAA6DR,KAAnH","sourcesContent":["import getResultsReducer from './reducer/get-results';\nimport types from './types';\n\nconst initialState = {\n    loaders: {\n        queryLoading: false,\n    },\n    releaseNotes: '',\n    repos: JSON.parse(localStorage.getItem('repos')) ?? [],\n    results: [],\n    query: '',\n};\n\nexport const addRepo = (state, {repo}) => {\n    const repos = [...state.repos, repo];\n    localStorage.setItem('repos', JSON.stringify(repos));\n    return ({\n        ...state,\n        repos,\n    });\n};\n\nexport const setQuery = (state, {query}) => ({...state, query});\n\nconst reducer = {\n    [types.ADD_REPO]: addRepo,\n    [types.SET_QUERY]: setQuery,\n    ...getResultsReducer,\n};\n\nexport default (state = initialState, action = {}) => reducer[action.type] ? reducer[action.type](state, action) : state;\n"]},"metadata":{},"sourceType":"module"}