{"ast":null,"code":"var _jsxFileName = \"/Users/JGhidossi/Downloads/lumanu-interview/src/library/Search/index.js\";\nimport React, { Component } from 'react';\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFocus = () => this.setState({\n      focused: true\n    });\n\n    this.onBlur = () => this.setState({\n      focused: false\n    });\n\n    this.addOption = option => {\n      let repos = JSON.parse(localStorage.getItem('repos'));\n      repos !== null ? repos.push(option) : repos = new Array(option);\n      localStorage.setItem('repos', JSON.stringify(repos));\n    };\n\n    this.state = {\n      focused: false\n    };\n  }\n\n  render() {\n    const {\n      onFocus,\n      onBlur,\n      addOption\n    } = this;\n    const {\n      focused\n    } = this.state;\n    const {\n      value,\n      onChange,\n      options\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: value,\n      placeholder: \"Find a Repository\",\n      onChange: e => onChange(e.target.value),\n      onFocus: onFocus // onBlur={onBlur}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), focused && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, options.map(option => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"option\",\n      key: option.id,\n      onClick: () => addOption(option),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, option.name))));\n  }\n\n}","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/library/Search/index.js"],"names":["React","Component","Search","constructor","props","onFocus","setState","focused","onBlur","addOption","option","repos","JSON","parse","localStorage","getItem","push","Array","setItem","stringify","state","render","value","onChange","options","e","target","map","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC1CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,OAPmB,GAOT,MAAM,KAAKC,QAAL,CAAc;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAd,CAPG;;AAAA,SASnBC,MATmB,GASV,MAAM,KAAKF,QAAL,CAAc;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAd,CATI;;AAAA,SAWnBE,SAXmB,GAWNC,MAAD,IAAY;AACpB,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACAJ,MAAAA,KAAK,KAAK,IAAV,GAAiBA,KAAK,CAACK,IAAN,CAAWN,MAAX,CAAjB,GAAsCC,KAAK,GAAG,IAAIM,KAAJ,CAAUP,MAAV,CAA9C;AACAI,MAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeR,KAAf,CAA9B;AACH,KAfkB;;AAEf,SAAKS,KAAL,GAAa;AACTb,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAYDc,EAAAA,MAAM,GAAG;AACL,UAAM;AAAChB,MAAAA,OAAD;AAAUG,MAAAA,MAAV;AAAkBC,MAAAA;AAAlB,QAA+B,IAArC;AACA,UAAM;AAACF,MAAAA;AAAD,QAAY,KAAKa,KAAvB;AACA,UAAM;AAACE,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA6B,KAAKpB,KAAxC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,KAAK,EAAEkB,KADX;AAEI,MAAA,WAAW,EAAE,mBAFjB;AAGI,MAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAH7B;AAII,MAAA,OAAO,EAAEjB,OAJb,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQKE,OAAO,iBACR;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKiB,OAAO,CAACG,GAAR,CAAajB,MAAD,iBACT;AACI,MAAA,SAAS,EAAC,QADd;AAEI,MAAA,GAAG,EAAEA,MAAM,CAACkB,EAFhB;AAGI,MAAA,OAAO,EAAE,MAAMnB,SAAS,CAACC,MAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKA,MAAM,CAACmB,IALZ,CADH,CADL,CATJ,CADJ;AAwBH;;AA9CyC","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            focused: false,\n        };\n    }\n\n    onFocus = () => this.setState({focused: true});\n\n    onBlur = () => this.setState({focused: false});\n\n    addOption = (option) => {\n        let repos = JSON.parse(localStorage.getItem('repos'));\n        repos !== null ? repos.push(option) : repos = new Array(option);\n        localStorage.setItem('repos', JSON.stringify(repos))\n    }\n\n    render() {\n        const {onFocus, onBlur, addOption} = this;\n        const {focused} = this.state;\n        const {value, onChange, options} = this.props;\n        return (\n            <div className=\"search-wrapper\">\n                <input\n                    value={value}\n                    placeholder={\"Find a Repository\"}\n                    onChange={(e) => onChange(e.target.value)}\n                    onFocus={onFocus}\n                    // onBlur={onBlur}\n                />\n                {focused &&\n                <div className=\"dropdown\">\n                    {options.map((option) =>\n                        <div\n                            className=\"option\"\n                            key={option.id}\n                            onClick={() => addOption(option)}\n                        >\n                            {option.name}\n                        </div>\n                    )}\n                </div>\n                }\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}