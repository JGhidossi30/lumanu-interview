{"ast":null,"code":"import types from '../types';\nexport const getResultsStart = state => ({ ...state,\n  loaders: { ...state.loaders,\n    queryLoading: true\n  }\n});\nexport const getResultsSuccess = (state, {\n  results\n}) => {\n  console.log(results);\n  const newResults = results.filter(result => !state.repos.includes(result));\n  console.log(newResults);\n  return { ...state,\n    loaders: { ...state.loaders,\n      queryLoading: false\n    },\n    results: newResults\n  };\n};\nexport const getResultsFail = (state, {\n  error\n}) => ({ ...state,\n  loaders: { ...state.loaders,\n    queryLoading: false\n  },\n  results: [],\n  error\n});\nexport default {\n  [types.GET_RESULTS_START]: getResultsStart,\n  [types.GET_RESULTS_SUCCESS]: getResultsSuccess,\n  [types.GET_RESULTS_FAIL]: getResultsFail\n};","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/modules/search/reducer/get-results.js"],"names":["types","getResultsStart","state","loaders","queryLoading","getResultsSuccess","results","console","log","newResults","filter","result","repos","includes","getResultsFail","error","GET_RESULTS_START","GET_RESULTS_SUCCESS","GET_RESULTS_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,KAAY,EACvC,GAAGA,KADoC;AAEvCC,EAAAA,OAAO,EAAE,EACL,GAAGD,KAAK,CAACC,OADJ;AAELC,IAAAA,YAAY,EAAE;AAFT;AAF8B,CAAZ,CAAxB;AAQP,OAAO,MAAMC,iBAAiB,GAAG,CAACH,KAAD,EAAQ;AAACI,EAAAA;AAAD,CAAR,KAAsB;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,UAAU,GAAGH,OAAO,CAACI,MAAR,CAAeC,MAAM,IAAI,CAACT,KAAK,CAACU,KAAN,CAAYC,QAAZ,CAAqBF,MAArB,CAA1B,CAAnB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACA,SAAQ,EACJ,GAAGP,KADC;AAEJC,IAAAA,OAAO,EAAE,EACL,GAAGD,KAAK,CAACC,OADJ;AAELC,MAAAA,YAAY,EAAE;AAFT,KAFL;AAMJE,IAAAA,OAAO,EAAEG;AANL,GAAR;AAQH,CAZM;AAcP,OAAO,MAAMK,cAAc,GAAG,CAACZ,KAAD,EAAQ;AAACa,EAAAA;AAAD,CAAR,MAAqB,EAC/C,GAAGb,KAD4C;AAE/CC,EAAAA,OAAO,EAAE,EACL,GAAGD,KAAK,CAACC,OADJ;AAELC,IAAAA,YAAY,EAAE;AAFT,GAFsC;AAM/CE,EAAAA,OAAO,EAAE,EANsC;AAO/CS,EAAAA;AAP+C,CAArB,CAAvB;AAUP,eAAe;AACX,GAACf,KAAK,CAACgB,iBAAP,GAA2Bf,eADhB;AAEX,GAACD,KAAK,CAACiB,mBAAP,GAA6BZ,iBAFlB;AAGX,GAACL,KAAK,CAACkB,gBAAP,GAA0BJ;AAHf,CAAf","sourcesContent":["import types from '../types';\n\nexport const getResultsStart = (state) => ({\n    ...state,\n    loaders: {\n        ...state.loaders,\n        queryLoading: true,\n    },\n});\n\nexport const getResultsSuccess = (state, {results}) => {\n    console.log(results);\n    const newResults = results.filter(result => !state.repos.includes(result));\n    console.log(newResults);\n    return ({\n        ...state,\n        loaders: {\n            ...state.loaders,\n            queryLoading: false,\n        },\n        results: newResults,\n    });\n}\n\nexport const getResultsFail = (state, {error}) => ({\n    ...state,\n    loaders: {\n        ...state.loaders,\n        queryLoading: false,\n    },\n    results: [],\n    error,\n});\n\nexport default {\n    [types.GET_RESULTS_START]: getResultsStart,\n    [types.GET_RESULTS_SUCCESS]: getResultsSuccess,\n    [types.GET_RESULTS_FAIL]: getResultsFail,\n};\n"]},"metadata":{},"sourceType":"module"}