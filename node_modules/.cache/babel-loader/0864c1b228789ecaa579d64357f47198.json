{"ast":null,"code":"import types from '../types';\nexport const getLatestReleaseStart = state => ({ ...state,\n  loaders: { ...state.loaders,\n    releaseLoading: true\n  }\n});\nexport const getLatestReleaseSuccess = (state, {\n  releaseNotes\n}) => {\n  console.log(releaseNotes);\n  console.log(state.repos);\n  const repo = state.repos[state.repos.length - 1];\n  repo.notes = releaseNotes; // const index = state.repos.findIndex((repo) => repo);\n\n  return { ...state,\n    loaders: { ...state.loaders,\n      releaseLoading: false\n    },\n    releaseNotes\n  };\n};\nexport const getLatestReleaseFail = (state, {\n  error\n}) => ({ ...state,\n  loaders: { ...state.loaders,\n    releaseLoading: false\n  },\n  error\n});\nexport default {\n  [types.GET_LATEST_RELEASE_START]: getLatestReleaseStart,\n  [types.GET_LATEST_RELEASE_SUCCESS]: getLatestReleaseSuccess,\n  [types.GET_LATEST_RELEASE_FAIL]: getLatestReleaseFail\n};","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/modules/search/reducer/get-latest-release.js"],"names":["types","getLatestReleaseStart","state","loaders","releaseLoading","getLatestReleaseSuccess","releaseNotes","console","log","repos","repo","length","notes","getLatestReleaseFail","error","GET_LATEST_RELEASE_START","GET_LATEST_RELEASE_SUCCESS","GET_LATEST_RELEASE_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,KAAD,KAAY,EAC7C,GAAGA,KAD0C;AAE7CC,EAAAA,OAAO,EAAE,EACL,GAAGD,KAAK,CAACC,OADJ;AAELC,IAAAA,cAAc,EAAE;AAFX;AAFoC,CAAZ,CAA9B;AAQP,OAAO,MAAMC,uBAAuB,GAAG,CAACH,KAAD,EAAQ;AAACI,EAAAA;AAAD,CAAR,KAA2B;AAC9DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,KAAlB;AACA,QAAMC,IAAI,GAAGR,KAAK,CAACO,KAAN,CAAYP,KAAK,CAACO,KAAN,CAAYE,MAAZ,GAAqB,CAAjC,CAAb;AACAD,EAAAA,IAAI,CAACE,KAAL,GAAaN,YAAb,CAJ8D,CAM9D;;AACA,SAAQ,EACJ,GAAGJ,KADC;AAEJC,IAAAA,OAAO,EAAE,EACL,GAAGD,KAAK,CAACC,OADJ;AAELC,MAAAA,cAAc,EAAE;AAFX,KAFL;AAMJE,IAAAA;AANI,GAAR;AAQH,CAfM;AAiBP,OAAO,MAAMO,oBAAoB,GAAG,CAACX,KAAD,EAAQ;AAACY,EAAAA;AAAD,CAAR,MAAqB,EACrD,GAAGZ,KADkD;AAErDC,EAAAA,OAAO,EAAE,EACL,GAAGD,KAAK,CAACC,OADJ;AAELC,IAAAA,cAAc,EAAE;AAFX,GAF4C;AAMrDU,EAAAA;AANqD,CAArB,CAA7B;AASP,eAAe;AACX,GAACd,KAAK,CAACe,wBAAP,GAAkCd,qBADvB;AAEX,GAACD,KAAK,CAACgB,0BAAP,GAAoCX,uBAFzB;AAGX,GAACL,KAAK,CAACiB,uBAAP,GAAiCJ;AAHtB,CAAf","sourcesContent":["import types from '../types';\n\nexport const getLatestReleaseStart = (state) => ({\n    ...state,\n    loaders: {\n        ...state.loaders,\n        releaseLoading: true,\n    },\n});\n\nexport const getLatestReleaseSuccess = (state, {releaseNotes}) => {\n    console.log(releaseNotes)\n    console.log(state.repos)\n    const repo = state.repos[state.repos.length - 1];\n    repo.notes = releaseNotes;\n\n    // const index = state.repos.findIndex((repo) => repo);\n    return ({\n        ...state,\n        loaders: {\n            ...state.loaders,\n            releaseLoading: false,\n        },\n        releaseNotes,\n    });\n}\n\nexport const getLatestReleaseFail = (state, {error}) => ({\n    ...state,\n    loaders: {\n        ...state.loaders,\n        releaseLoading: false,\n    },\n    error,\n});\n\nexport default {\n    [types.GET_LATEST_RELEASE_START]: getLatestReleaseStart,\n    [types.GET_LATEST_RELEASE_SUCCESS]: getLatestReleaseSuccess,\n    [types.GET_LATEST_RELEASE_FAIL]: getLatestReleaseFail,\n};\n"]},"metadata":{},"sourceType":"module"}