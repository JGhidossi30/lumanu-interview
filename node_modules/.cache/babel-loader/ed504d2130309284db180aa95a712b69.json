{"ast":null,"code":"var _jsxFileName = \"/Users/JGhidossi/Downloads/lumanu-interview/src/views/App/index.js\";\nimport { Octokit } from \"@octokit/core\";\nimport React, { Component } from 'react';\nimport Search from '../../library/Search';\nimport Repo from '../../library/Repo';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.octokit = new Octokit({\n      auth: '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'\n    });\n\n    this.setResults = repos => this.setState({\n      repos\n    });\n\n    this.setQuery = query => {\n      const {\n        octokit,\n        setResults\n      } = this;\n      this.setState({\n        query\n      });\n      query !== '' ? octokit.request('GET /search/repositories', {\n        q: query,\n        per_page: 20\n      }).then(response => setResults(response.data.items)) : setResults([]);\n    };\n\n    this.setDescription = description => this.setState({\n      description\n    });\n\n    this.removeRepo = index => {\n      const {\n        repos\n      } = this.state;\n      repos.splice(index, 1);\n      localStorage.setItem('repos', JSON.stringify(repos));\n      this.setState({\n        repos\n      });\n      console.log(index);\n    };\n\n    this.state = {\n      results: [],\n      repos: JSON.parse(localStorage.getItem('repos')),\n      query: '',\n      description: ''\n    };\n  }\n\n  render() {\n    const {\n      setQuery,\n      setDescription,\n      removeRepo\n    } = this;\n    const {\n      description,\n      results,\n      query\n    } = this.state;\n    const storedRepos = JSON.parse(localStorage.getItem('repos'));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      value: query,\n      onChange: setQuery,\n      options: results,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, storedRepos.map((repo, key) => /*#__PURE__*/React.createElement(Repo, {\n      repo: repo,\n      setDescription: setDescription,\n      removeRepo: removeRepo,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"gradient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Description\"), description));\n  }\n\n}","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/views/App/index.js"],"names":["Octokit","React","Component","Search","Repo","App","constructor","props","octokit","auth","setResults","repos","setState","setQuery","query","request","q","per_page","then","response","data","items","setDescription","description","removeRepo","index","state","splice","localStorage","setItem","JSON","stringify","console","log","results","parse","getItem","render","storedRepos","map","repo","key"],"mappings":"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","sourcesContent":["import {Octokit} from \"@octokit/core\";\nimport React, {Component} from 'react';\nimport Search from '../../library/Search';\nimport Repo from '../../library/Repo';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: [],\n            repos: JSON.parse(localStorage.getItem('repos')),\n            query: '',\n            description: '',\n        }\n    }\n\n    octokit = new Octokit({\n        auth: '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',\n    });\n\n    setResults = (repos) => this.setState({repos});\n\n    setQuery = (query) => {\n        const {octokit, setResults} = this;\n        this.setState({query});\n\n        query !== '' ?\n            octokit.request('GET /search/repositories', {\n                q: query,\n                per_page: 20,\n            }).then((response) => setResults(response.data.items))\n            :\n            setResults([]);\n    }\n\n    setDescription = (description) => this.setState({description});\n\n    removeRepo = (index) => {\n        const {repos} = this.state;\n        repos.splice(index, 1);\n        localStorage.setItem('repos', JSON.stringify(repos));\n        this.setState({repos});\n        console.log(index);\n    }\n\n    render() {\n        const {setQuery, setDescription, removeRepo} = this;\n        const {description, results, query} = this.state;\n        const storedRepos = JSON.parse(localStorage.getItem('repos'));\n        return (\n            <div className=\"app-container\">\n                <div className=\"content-container\">\n                    <Search\n                        value={query}\n                        onChange={setQuery}\n                        options={results}\n                    />\n                    <div className=\"scroll\">\n                        {storedRepos.map((repo, key) =>\n                            <Repo\n                                repo={repo}\n                                setDescription={setDescription}\n                                removeRepo={removeRepo}\n                                key={key}\n                            />\n                        )}\n                    </div>\n                </div>\n                <div className=\"content-container\">\n                    <h1\n                        className=\"gradient\"\n                    >\n                        Description\n                    </h1>\n                    {description}\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}