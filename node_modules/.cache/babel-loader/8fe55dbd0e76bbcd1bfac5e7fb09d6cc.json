{"ast":null,"code":"var _jsxFileName = \"/Users/JGhidossi/Downloads/lumanu-interview/src/views/App/index.js\";\nimport { Octokit } from \"@octokit/core\";\nimport React, { Component } from 'react';\nimport Search from '../../library/Search';\nimport Repo from '../../library/Repo';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.octokit = new Octokit({\n      auth: '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'\n    });\n\n    this.setRepos = repos => {\n      console.log(repos);\n      this.setState({\n        repos\n      });\n    };\n\n    this.setQuery = query => {\n      const {\n        octokit,\n        setRepos\n      } = this;\n      this.setState({\n        query\n      });\n      query !== '' ? octokit.request('GET /search/repositories', {\n        q: query,\n        per_page: 20\n      }).then(response => setRepos(response.data.items)) : setRepos([]);\n    };\n\n    this.setDescription = description => this.setState({\n      description\n    });\n\n    this.state = {\n      repos: [],\n      query: '',\n      description: ''\n    };\n  }\n\n  render() {\n    const {\n      setQuery,\n      setDescription\n    } = this;\n    const {\n      description,\n      repos,\n      query\n    } = this.state;\n    const storedRepos = JSON.parse(localStorage.getItem('repos'));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      value: query,\n      onChange: setQuery,\n      options: repos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scroll\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, storedRepos.map((repo, key) => /*#__PURE__*/React.createElement(Repo, {\n      repo: repo,\n      setDescription: setDescription,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"gradient\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Description\"), description));\n  }\n\n}","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/views/App/index.js"],"names":["Octokit","React","Component","Search","Repo","App","constructor","props","octokit","auth","setRepos","repos","console","log","setState","setQuery","query","request","q","per_page","then","response","data","items","setDescription","description","state","render","storedRepos","JSON","parse","localStorage","getItem","map","repo","key"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,eAAe,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACvCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SASnBC,OATmB,GAST,IAAIR,OAAJ,CAAY;AAClBS,MAAAA,IAAI,EAAE;AADY,KAAZ,CATS;;AAAA,SAanBC,QAbmB,GAaPC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACH,KAhBkB;;AAAA,SAkBnBI,QAlBmB,GAkBPC,KAAD,IAAW;AAClB,YAAM;AAACR,QAAAA,OAAD;AAAUE,QAAAA;AAAV,UAAsB,IAA5B;AACA,WAAKI,QAAL,CAAc;AAACE,QAAAA;AAAD,OAAd;AAEAA,MAAAA,KAAK,KAAK,EAAV,GACIR,OAAO,CAACS,OAAR,CAAgB,0BAAhB,EAA4C;AACxCC,QAAAA,CAAC,EAAEF,KADqC;AAExCG,QAAAA,QAAQ,EAAE;AAF8B,OAA5C,EAGGC,IAHH,CAGSC,QAAD,IAAcX,QAAQ,CAACW,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAH9B,CADJ,GAMIb,QAAQ,CAAC,EAAD,CANZ;AAOH,KA7BkB;;AAAA,SA+BnBc,cA/BmB,GA+BDC,WAAD,IAAiB,KAAKX,QAAL,CAAc;AAACW,MAAAA;AAAD,KAAd,CA/Bf;;AAEf,SAAKC,KAAL,GAAa;AACTf,MAAAA,KAAK,EAAE,EADE;AAETK,MAAAA,KAAK,EAAE,EAFE;AAGTS,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKH;;AA0BDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACZ,MAAAA,QAAD;AAAWS,MAAAA;AAAX,QAA6B,IAAnC;AACA,UAAM;AAACC,MAAAA,WAAD;AAAcd,MAAAA,KAAd;AAAqBK,MAAAA;AAArB,QAA8B,KAAKU,KAAzC;AACA,UAAME,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAApB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAEhB,KADX;AAEI,MAAA,QAAQ,EAAED,QAFd;AAGI,MAAA,OAAO,EAAEJ,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKiB,WAAW,CAACK,GAAZ,CAAgB,CAACC,IAAD,EAAOC,GAAP,kBACb,oBAAC,IAAD;AACI,MAAA,IAAI,EAAED,IADV;AAEI,MAAA,cAAc,EAAEV,cAFpB;AAGI,MAAA,GAAG,EAAEW,GAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CANJ,CADJ,eAiBI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAC,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAMKV,WANL,CAjBJ,CADJ;AA4BH;;AAlEsC","sourcesContent":["import {Octokit} from \"@octokit/core\";\nimport React, {Component} from 'react';\nimport Search from '../../library/Search';\nimport Repo from '../../library/Repo';\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            repos: [],\n            query: '',\n            description: '',\n        }\n    }\n\n    octokit = new Octokit({\n        auth: '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',\n    });\n\n    setRepos = (repos) => {\n        console.log(repos);\n        this.setState({repos});\n    }\n\n    setQuery = (query) => {\n        const {octokit, setRepos} = this;\n        this.setState({query});\n\n        query !== '' ?\n            octokit.request('GET /search/repositories', {\n                q: query,\n                per_page: 20,\n            }).then((response) => setRepos(response.data.items))\n            :\n            setRepos([]);\n    }\n\n    setDescription = (description) => this.setState({description});\n\n    render() {\n        const {setQuery, setDescription} = this;\n        const {description, repos, query} = this.state;\n        const storedRepos = JSON.parse(localStorage.getItem('repos'));\n        return (\n            <div className=\"app-container\">\n                <div className=\"content-container\">\n                    <Search\n                        value={query}\n                        onChange={setQuery}\n                        options={repos}\n                    />\n                    <div className=\"scroll\">\n                        {storedRepos.map((repo, key) =>\n                            <Repo\n                                repo={repo}\n                                setDescription={setDescription}\n                                key={key}\n                            />\n                        )}\n                    </div>\n                </div>\n                <div className=\"content-container\">\n                    <h1\n                        className=\"gradient\"\n                    >\n                        Description\n                    </h1>\n                    {description}\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}