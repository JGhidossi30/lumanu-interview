{"ast":null,"code":"import types from '../types';\nexport const getResultsStart = state => ({ ...state,\n  loaders: { ...state.loaders,\n    queryLoading: true\n  }\n});\nexport const getResultsSuccess = (state, {\n  success\n}) => ({ ...state,\n  loaders: { ...state.loaders,\n    queryLoading: false\n  },\n  success\n});\nexport const getResultsFail = (state, {\n  error\n}) => ({ ...state,\n  loaders: { ...state.loaders,\n    queryLoading: false\n  },\n  error\n});\nexport default {\n  [types.SET_QUERY_START]: getResultsStart,\n  [types.SET_QUERY_SUCCESS]: getResultsSuccess,\n  [types.SET_QUERY_FAIL]: getResultsFail\n};","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/modules/search/reducer/get-results.js"],"names":["types","getResultsStart","state","loaders","queryLoading","getResultsSuccess","success","getResultsFail","error","SET_QUERY_START","SET_QUERY_SUCCESS","SET_QUERY_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,KAAY,EACvC,GAAGA,KADoC;AAEvCC,EAAAA,OAAO,EAAE,EACL,GAAGD,KAAK,CAACC,OADJ;AAELC,IAAAA,YAAY,EAAE;AAFT;AAF8B,CAAZ,CAAxB;AAQP,OAAO,MAAMC,iBAAiB,GAAG,CAACH,KAAD,EAAQ;AAACI,EAAAA;AAAD,CAAR,MAAuB,EACpD,GAAGJ,KADiD;AAEpDC,EAAAA,OAAO,EAAE,EACL,GAAGD,KAAK,CAACC,OADJ;AAELC,IAAAA,YAAY,EAAE;AAFT,GAF2C;AAMpDE,EAAAA;AANoD,CAAvB,CAA1B;AASP,OAAO,MAAMC,cAAc,GAAG,CAACL,KAAD,EAAQ;AAACM,EAAAA;AAAD,CAAR,MAAqB,EAC/C,GAAGN,KAD4C;AAE/CC,EAAAA,OAAO,EAAE,EACL,GAAGD,KAAK,CAACC,OADJ;AAELC,IAAAA,YAAY,EAAE;AAFT,GAFsC;AAM/CI,EAAAA;AAN+C,CAArB,CAAvB;AASP,eAAe;AACX,GAACR,KAAK,CAACS,eAAP,GAAyBR,eADd;AAEX,GAACD,KAAK,CAACU,iBAAP,GAA2BL,iBAFhB;AAGX,GAACL,KAAK,CAACW,cAAP,GAAwBJ;AAHb,CAAf","sourcesContent":["import types from '../types';\n\nexport const getResultsStart = (state) => ({\n    ...state,\n    loaders: {\n        ...state.loaders,\n        queryLoading: true,\n    },\n});\n\nexport const getResultsSuccess = (state, {success}) => ({\n    ...state,\n    loaders: {\n        ...state.loaders,\n        queryLoading: false,\n    },\n    success,\n});\n\nexport const getResultsFail = (state, {error}) => ({\n    ...state,\n    loaders: {\n        ...state.loaders,\n        queryLoading: false,\n    },\n    error,\n});\n\nexport default {\n    [types.SET_QUERY_START]: getResultsStart,\n    [types.SET_QUERY_SUCCESS]: getResultsSuccess,\n    [types.SET_QUERY_FAIL]: getResultsFail,\n};\n"]},"metadata":{},"sourceType":"module"}