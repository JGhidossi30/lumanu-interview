{"ast":null,"code":"var _jsxFileName = \"/Users/JGhidossi/Downloads/lumanu-interview/src/views/App/index.js\";\nimport { Octokit } from \"@octokit/core\";\nimport React, { useState } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Search from '../../library/Search';\n\nfunction App() {\n  const [query, setQuery] = useState('microsoft');\n  const octokit = new Octokit();\n  octokit.request('GET /repos', {// owner: query,\n    // repo: 'vscode'\n  }).then(response => {\n    console.log(response);\n  });\n  const top100Films = [{\n    title: 'The Shawshank Redemption',\n    year: 1994\n  }, {\n    title: 'The Godfather',\n    year: 1972\n  }, {\n    title: 'The Godfather: Part II',\n    year: 1974\n  }, {\n    title: 'The Dark Knight',\n    year: 2008\n  }, {\n    title: '12 Angry Men',\n    year: 1957\n  }, {\n    title: \"Schindler's List\",\n    year: 1993\n  }, {\n    title: 'Pulp Fiction',\n    year: 1994\n  }, {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003\n  }, {\n    title: 'The Good, the Bad and the Ugly',\n    year: 1966\n  }, {\n    title: 'Fight Club',\n    year: 1999\n  }, {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001\n  }, {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980\n  }, {\n    title: 'Forrest Gump',\n    year: 1994\n  }, {\n    title: 'Inception',\n    year: 2010\n  }, {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002\n  }, {\n    title: \"One Flew Over the Cuckoo's Nest\",\n    year: 1975\n  }, {\n    title: 'Goodfellas',\n    year: 1990\n  }, {\n    title: 'The Matrix',\n    year: 1999\n  }, {\n    title: 'Seven Samurai',\n    year: 1954\n  }, {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977\n  }, {\n    title: 'City of God',\n    year: 2002\n  }, {\n    title: 'Se7en',\n    year: 1995\n  }, {\n    title: 'The Silence of the Lambs',\n    year: 1991\n  }, {\n    title: \"It's a Wonderful Life\",\n    year: 1946\n  }, {\n    title: 'Life Is Beautiful',\n    year: 1997\n  }, {\n    title: 'The Usual Suspects',\n    year: 1995\n  }, {\n    title: 'Léon: The Professional',\n    year: 1994\n  }, {\n    title: 'Spirited Away',\n    year: 2001\n  }, {\n    title: 'Saving Private Ryan',\n    year: 1998\n  }, {\n    title: 'Once Upon a Time in the West',\n    year: 1968\n  }, {\n    title: 'American History X',\n    year: 1998\n  }, {\n    title: 'Interstellar',\n    year: 2014\n  }, {\n    title: 'Casablanca',\n    year: 1942\n  }, {\n    title: 'City Lights',\n    year: 1931\n  }, {\n    title: 'Psycho',\n    year: 1960\n  }, {\n    title: 'The Green Mile',\n    year: 1999\n  }, {\n    title: 'The Intouchables',\n    year: 2011\n  }, {\n    title: 'Modern Times',\n    year: 1936\n  }, {\n    title: 'Raiders of the Lost Ark',\n    year: 1981\n  }, {\n    title: 'Rear Window',\n    year: 1954\n  }, {\n    title: 'The Pianist',\n    year: 2002\n  }, {\n    title: 'The Departed',\n    year: 2006\n  }, {\n    title: 'Terminator 2: Judgment Day',\n    year: 1991\n  }, {\n    title: 'Back to the Future',\n    year: 1985\n  }, {\n    title: 'Whiplash',\n    year: 2014\n  }, {\n    title: 'Gladiator',\n    year: 2000\n  }, {\n    title: 'Memento',\n    year: 2000\n  }, {\n    title: 'The Prestige',\n    year: 2006\n  }, {\n    title: 'The Lion King',\n    year: 1994\n  }, {\n    title: 'Apocalypse Now',\n    year: 1979\n  }, {\n    title: 'Alien',\n    year: 1979\n  }, {\n    title: 'Sunset Boulevard',\n    year: 1950\n  }, {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964\n  }, {\n    title: 'The Great Dictator',\n    year: 1940\n  }, {\n    title: 'Cinema Paradiso',\n    year: 1988\n  }, {\n    title: 'The Lives of Others',\n    year: 2006\n  }, {\n    title: 'Grave of the Fireflies',\n    year: 1988\n  }, {\n    title: 'Paths of Glory',\n    year: 1957\n  }, {\n    title: 'Django Unchained',\n    year: 2012\n  }, {\n    title: 'The Shining',\n    year: 1980\n  }, {\n    title: 'WALL·E',\n    year: 2008\n  }, {\n    title: 'American Beauty',\n    year: 1999\n  }, {\n    title: 'The Dark Knight Rises',\n    year: 2012\n  }, {\n    title: 'Princess Mononoke',\n    year: 1997\n  }, {\n    title: 'Aliens',\n    year: 1986\n  }, {\n    title: 'Oldboy',\n    year: 2003\n  }, {\n    title: 'Once Upon a Time in America',\n    year: 1984\n  }, {\n    title: 'Witness for the Prosecution',\n    year: 1957\n  }, {\n    title: 'Das Boot',\n    year: 1981\n  }, {\n    title: 'Citizen Kane',\n    year: 1941\n  }, {\n    title: 'North by Northwest',\n    year: 1959\n  }, {\n    title: 'Vertigo',\n    year: 1958\n  }, {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983\n  }, {\n    title: 'Reservoir Dogs',\n    year: 1992\n  }, {\n    title: 'Braveheart',\n    year: 1995\n  }, {\n    title: 'M',\n    year: 1931\n  }, {\n    title: 'Requiem for a Dream',\n    year: 2000\n  }, {\n    title: 'Amélie',\n    year: 2001\n  }, {\n    title: 'A Clockwork Orange',\n    year: 1971\n  }, {\n    title: 'Like Stars on Earth',\n    year: 2007\n  }, {\n    title: 'Taxi Driver',\n    year: 1976\n  }, {\n    title: 'Lawrence of Arabia',\n    year: 1962\n  }, {\n    title: 'Double Indemnity',\n    year: 1944\n  }, {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004\n  }, {\n    title: 'Amadeus',\n    year: 1984\n  }, {\n    title: 'To Kill a Mockingbird',\n    year: 1962\n  }, {\n    title: 'Toy Story 3',\n    year: 2010\n  }, {\n    title: 'Logan',\n    year: 2017\n  }, {\n    title: 'Full Metal Jacket',\n    year: 1987\n  }, {\n    title: 'Dangal',\n    year: 2016\n  }, {\n    title: 'The Sting',\n    year: 1973\n  }, {\n    title: '2001: A Space Odyssey',\n    year: 1968\n  }, {\n    title: \"Singin' in the Rain\",\n    year: 1952\n  }, {\n    title: 'Toy Story',\n    year: 1995\n  }, {\n    title: 'Bicycle Thieves',\n    year: 1948\n  }, {\n    title: 'The Kid',\n    year: 1921\n  }, {\n    title: 'Inglourious Basterds',\n    year: 2009\n  }, {\n    title: 'Snatch',\n    year: 2000\n  }, {\n    title: '3 Idiots',\n    year: 2009\n  }, {\n    title: 'Monty Python and the Holy Grail',\n    year: 1975\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: top100Films,\n    getOptionLabel: option => option.title,\n    style: {\n      width: 300\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Combo box\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 46\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    value: query,\n    onChange: setQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), \"hiya\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"hiya\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/views/App/index.js"],"names":["Octokit","React","useState","Autocomplete","TextField","Search","App","query","setQuery","octokit","request","then","response","console","log","top100Films","title","year","option","width","params"],"mappings":"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","sourcesContent":["import {Octokit} from \"@octokit/core\";\nimport React, {useState} from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Search from '../../library/Search';\n\nfunction App() {\n    const [query, setQuery] = useState('microsoft');\n\n    const octokit = new Octokit();\n    octokit.request('GET /repos', {\n        // owner: query,\n        // repo: 'vscode'\n    }).then(\n        (response) => {\n            console.log(response);\n        }\n    );\n\n    const top100Films = [\n        { title: 'The Shawshank Redemption', year: 1994 },\n        { title: 'The Godfather', year: 1972 },\n        { title: 'The Godfather: Part II', year: 1974 },\n        { title: 'The Dark Knight', year: 2008 },\n        { title: '12 Angry Men', year: 1957 },\n        { title: \"Schindler's List\", year: 1993 },\n        { title: 'Pulp Fiction', year: 1994 },\n        { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n        { title: 'The Good, the Bad and the Ugly', year: 1966 },\n        { title: 'Fight Club', year: 1999 },\n        { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n        { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n        { title: 'Forrest Gump', year: 1994 },\n        { title: 'Inception', year: 2010 },\n        { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n        { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n        { title: 'Goodfellas', year: 1990 },\n        { title: 'The Matrix', year: 1999 },\n        { title: 'Seven Samurai', year: 1954 },\n        { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n        { title: 'City of God', year: 2002 },\n        { title: 'Se7en', year: 1995 },\n        { title: 'The Silence of the Lambs', year: 1991 },\n        { title: \"It's a Wonderful Life\", year: 1946 },\n        { title: 'Life Is Beautiful', year: 1997 },\n        { title: 'The Usual Suspects', year: 1995 },\n        { title: 'Léon: The Professional', year: 1994 },\n        { title: 'Spirited Away', year: 2001 },\n        { title: 'Saving Private Ryan', year: 1998 },\n        { title: 'Once Upon a Time in the West', year: 1968 },\n        { title: 'American History X', year: 1998 },\n        { title: 'Interstellar', year: 2014 },\n        { title: 'Casablanca', year: 1942 },\n        { title: 'City Lights', year: 1931 },\n        { title: 'Psycho', year: 1960 },\n        { title: 'The Green Mile', year: 1999 },\n        { title: 'The Intouchables', year: 2011 },\n        { title: 'Modern Times', year: 1936 },\n        { title: 'Raiders of the Lost Ark', year: 1981 },\n        { title: 'Rear Window', year: 1954 },\n        { title: 'The Pianist', year: 2002 },\n        { title: 'The Departed', year: 2006 },\n        { title: 'Terminator 2: Judgment Day', year: 1991 },\n        { title: 'Back to the Future', year: 1985 },\n        { title: 'Whiplash', year: 2014 },\n        { title: 'Gladiator', year: 2000 },\n        { title: 'Memento', year: 2000 },\n        { title: 'The Prestige', year: 2006 },\n        { title: 'The Lion King', year: 1994 },\n        { title: 'Apocalypse Now', year: 1979 },\n        { title: 'Alien', year: 1979 },\n        { title: 'Sunset Boulevard', year: 1950 },\n        { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n        { title: 'The Great Dictator', year: 1940 },\n        { title: 'Cinema Paradiso', year: 1988 },\n        { title: 'The Lives of Others', year: 2006 },\n        { title: 'Grave of the Fireflies', year: 1988 },\n        { title: 'Paths of Glory', year: 1957 },\n        { title: 'Django Unchained', year: 2012 },\n        { title: 'The Shining', year: 1980 },\n        { title: 'WALL·E', year: 2008 },\n        { title: 'American Beauty', year: 1999 },\n        { title: 'The Dark Knight Rises', year: 2012 },\n        { title: 'Princess Mononoke', year: 1997 },\n        { title: 'Aliens', year: 1986 },\n        { title: 'Oldboy', year: 2003 },\n        { title: 'Once Upon a Time in America', year: 1984 },\n        { title: 'Witness for the Prosecution', year: 1957 },\n        { title: 'Das Boot', year: 1981 },\n        { title: 'Citizen Kane', year: 1941 },\n        { title: 'North by Northwest', year: 1959 },\n        { title: 'Vertigo', year: 1958 },\n        { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n        { title: 'Reservoir Dogs', year: 1992 },\n        { title: 'Braveheart', year: 1995 },\n        { title: 'M', year: 1931 },\n        { title: 'Requiem for a Dream', year: 2000 },\n        { title: 'Amélie', year: 2001 },\n        { title: 'A Clockwork Orange', year: 1971 },\n        { title: 'Like Stars on Earth', year: 2007 },\n        { title: 'Taxi Driver', year: 1976 },\n        { title: 'Lawrence of Arabia', year: 1962 },\n        { title: 'Double Indemnity', year: 1944 },\n        { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n        { title: 'Amadeus', year: 1984 },\n        { title: 'To Kill a Mockingbird', year: 1962 },\n        { title: 'Toy Story 3', year: 2010 },\n        { title: 'Logan', year: 2017 },\n        { title: 'Full Metal Jacket', year: 1987 },\n        { title: 'Dangal', year: 2016 },\n        { title: 'The Sting', year: 1973 },\n        { title: '2001: A Space Odyssey', year: 1968 },\n        { title: \"Singin' in the Rain\", year: 1952 },\n        { title: 'Toy Story', year: 1995 },\n        { title: 'Bicycle Thieves', year: 1948 },\n        { title: 'The Kid', year: 1921 },\n        { title: 'Inglourious Basterds', year: 2009 },\n        { title: 'Snatch', year: 2000 },\n        { title: '3 Idiots', year: 2009 },\n        { title: 'Monty Python and the Holy Grail', year: 1975 },\n    ];\n\n    return (\n        <div className=\"app-container\">\n            <div className=\"flex-1\">\n                <Autocomplete\n                    id=\"combo-box-demo\"\n                    options={top100Films}\n                    getOptionLabel={(option) => option.title}\n                    style={{ width: 300 }}\n                    renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n                />\n                <Search\n                    value={query}\n                    onChange={setQuery}\n                />\n                hiya\n            </div>\n            <div className=\"flex-1\">\n                hiya\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}