{"ast":null,"code":"var _jsxFileName = \"/Users/JGhidossi/Downloads/lumanu-interview/src/library/Search/index.js\";\nimport { Octokit } from '@octokit/core';\nimport React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nfunction Search() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [focused, setFocused] = useState(false);\n\n  Search.handleClickOutside = () => setFocused(false);\n\n  const onChange = query => {\n    setQuery(query);\n    const octokit = new Octokit({\n      auth: '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'\n    });\n    query !== '' ? octokit.request('GET /search/repositories', {\n      q: query,\n      per_page: 20\n    }).then(response => setResults(response.data.items)) : setResults([]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    placeholder: \"Find a Repository\",\n    onChange: e => onChange(e.target.value),\n    onFocus: () => setFocused(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), focused && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, results.map(result => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option\",\n    key: result.id // onClick={() => addOption(option)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, result.name))));\n}\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Search.handleClickOutside\n};\nexport default onClickOutside(Search, clickOutsideConfig);","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/library/Search/index.js"],"names":["Octokit","React","useState","onClickOutside","Search","query","setQuery","results","setResults","focused","setFocused","handleClickOutside","onChange","octokit","auth","request","q","per_page","then","response","data","items","e","target","value","map","result","id","name","clickOutsideConfig"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;AAEA,SAASC,MAAT,GAAkB;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;;AACAE,EAAAA,MAAM,CAACO,kBAAP,GAA4B,MAAMD,UAAU,CAAC,KAAD,CAA5C;;AACA,QAAME,QAAQ,GAAIP,KAAD,IAAW;AACxBC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,UAAMQ,OAAO,GAAG,IAAIb,OAAJ,CAAY;AAACc,MAAAA,IAAI,EAAE;AAAP,KAAZ,CAAhB;AACAT,IAAAA,KAAK,KAAK,EAAV,GACIQ,OAAO,CAACE,OAAR,CAAgB,0BAAhB,EAA4C;AACxCC,MAAAA,CAAC,EAAEX,KADqC;AAExCY,MAAAA,QAAQ,EAAE;AAF8B,KAA5C,EAGGC,IAHH,CAGSC,QAAD,IAAcX,UAAU,CAACW,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAHhC,CADJ,GAMIb,UAAU,CAAC,EAAD,CANd;AAOH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAEH,KADX;AAEI,IAAA,WAAW,EAAE,mBAFjB;AAGI,IAAA,QAAQ,EAAGiB,CAAD,IAAOV,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;AAII,IAAA,OAAO,EAAE,MAAMd,UAAU,CAAC,IAAD,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOKD,OAAO,iBACR;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACkB,GAAR,CAAaC,MAAD,iBACT;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,GAAG,EAAEA,MAAM,CAACC,EAFhB,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,MAAM,CAACE,IALZ,CADH,CADL,CARJ,CADJ;AAuBH;;AAED,MAAMC,kBAAkB,GAAG;AAAClB,EAAAA,kBAAkB,EAAE,MAAMP,MAAM,CAACO;AAAlC,CAA3B;AAEA,eAAeR,cAAc,CAACC,MAAD,EAASyB,kBAAT,CAA7B","sourcesContent":["import {Octokit} from '@octokit/core';\nimport React, {useState} from 'react';\nimport onClickOutside from 'react-onclickoutside'\n\nfunction Search() {\n    const [query, setQuery] = useState('');\n    const [results, setResults] = useState([]);\n    const [focused, setFocused] = useState(false);\n    Search.handleClickOutside = () => setFocused(false);\n    const onChange = (query) => {\n        setQuery(query);\n        const octokit = new Octokit({auth: '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'});\n        query !== '' ?\n            octokit.request('GET /search/repositories', {\n                q: query,\n                per_page: 20,\n            }).then((response) => setResults(response.data.items))\n            :\n            setResults([]);\n    }\n\n    return (\n        <div className=\"search-wrapper\">\n            <input\n                value={query}\n                placeholder={\"Find a Repository\"}\n                onChange={(e) => onChange(e.target.value)}\n                onFocus={() => setFocused(true)}\n            />\n            {focused &&\n            <div className=\"dropdown\">\n                {results.map((result) =>\n                    <div\n                        className=\"option\"\n                        key={result.id}\n                        // onClick={() => addOption(option)}\n                    >\n                        {result.name}\n                    </div>\n                )}\n            </div>\n            }\n        </div>\n    );\n}\n\nconst clickOutsideConfig = {handleClickOutside: () => Search.handleClickOutside};\n\nexport default onClickOutside(Search, clickOutsideConfig);\n"]},"metadata":{},"sourceType":"module"}