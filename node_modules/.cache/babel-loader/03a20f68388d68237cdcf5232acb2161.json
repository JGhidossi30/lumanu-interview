{"ast":null,"code":"var _jsxFileName = \"/Users/JGhidossi/Downloads/lumanu-interview/src/library/Search/index.js\";\nimport { Octokit } from '@octokit/core';\nimport React, { useState, useEffect } from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nfunction Search({\n  options\n}) {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [focused, setFocused] = useState(false);\n\n  Search.handleClickOutside = () => setFocused(false);\n\n  useEffect(() => {\n    checkResults();\n  }, []);\n\n  let checkResults = () => {\n    query !== '' ? octokit.request('GET /search/repositories', {\n      q: query,\n      per_page: 20\n    }).then(response => setResults(response.data.items)) : setResults([]); // setOnSmallScreen(window.innerWidth < 768);\n  };\n\n  const octokit = new Octokit({\n    auth: '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'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    placeholder: \"Find a Repository\",\n    onChange: e => setQuery(e.target.value),\n    onFocus: () => setFocused(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), focused && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, results.map(result => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option\",\n    key: result.id // onClick={() => addOption(option)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, result.name))));\n}\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Search.handleClickOutside\n}; // class Search extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             focused: false,\n//         };\n//     }\n//\n//     onFocus = () => this.setState({focused: true});\n//\n//     handleClickOutside = () => {\n//         const {focused} = this.state;\n//         focused && this.setState({focused: false});\n//     }\n//\n//     addOption = (option) => {\n//         let repos = JSON.parse(localStorage.getItem('repos'));\n//         repos !== null ? repos.push(option) : repos = new Array(option);\n//         localStorage.setItem('repos', JSON.stringify(repos));\n//     }\n//\n//     setQuery = (query) => {\n//         const {octokit, setResults} = this;\n//         this.setState({query});\n//\n//         query !== '' ?\n//             octokit.request('GET /search/repositories', {\n//                 q: query,\n//                 per_page: 20,\n//             }).then((response) => setResults(response.data.items))\n//             :\n//             setResults([]);\n//     }\n//\n//     render() {\n//         const {onFocus, addOption} = this;\n//         const {focused} = this.state;\n//         const {value, onChange, options} = this.props;\n//         return (\n//             <div className=\"search-wrapper\">\n//                 <input\n//                     value={value}\n//                     placeholder={\"Find a Repository\"}\n//                     onChange={(e) => onChange(e.target.value)}\n//                     onFocus={onFocus}\n//                 />\n//                 {focused &&\n//                 <div className=\"dropdown\">\n//                     {options.map((option) =>\n//                         <div\n//                             className=\"option\"\n//                             key={option.id}\n//                             onClick={() => addOption(option)}\n//                         >\n//                             {option.name}\n//                         </div>\n//                     )}\n//                 </div>\n//                 }\n//             </div>\n//         );\n//     }\n// }\n\nexport default onClickOutside(Search, clickOutsideConfig);","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/library/Search/index.js"],"names":["Octokit","React","useState","useEffect","onClickOutside","Search","options","query","setQuery","results","setResults","focused","setFocused","handleClickOutside","checkResults","octokit","request","q","per_page","then","response","data","items","auth","e","target","value","map","result","id","name","clickOutsideConfig"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA2B;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AACAG,EAAAA,MAAM,CAACQ,kBAAP,GAA4B,MAAMD,UAAU,CAAC,KAAD,CAA5C;;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIA,YAAY,GAAG,MAAM;AACrBP,IAAAA,KAAK,KAAK,EAAV,GACQQ,OAAO,CAACC,OAAR,CAAgB,0BAAhB,EAA4C;AACxCC,MAAAA,CAAC,EAAEV,KADqC;AAExCW,MAAAA,QAAQ,EAAE;AAF8B,KAA5C,EAGGC,IAHH,CAGSC,QAAD,IAAcV,UAAU,CAACU,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAHhC,CADR,GAMQZ,UAAU,CAAC,EAAD,CANlB,CADqB,CASrB;AACH,GAVD;;AAYA,QAAMK,OAAO,GAAG,IAAIf,OAAJ,CAAY;AAACuB,IAAAA,IAAI,EAAE;AAAP,GAAZ,CAAhB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAEhB,KADX;AAEI,IAAA,WAAW,EAAE,mBAFjB;AAGI,IAAA,QAAQ,EAAGiB,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;AAII,IAAA,OAAO,EAAE,MAAMd,UAAU,CAAC,IAAD,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOKD,OAAO,iBACR;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACkB,GAAR,CAAaC,MAAD,iBACT;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,GAAG,EAAEA,MAAM,CAACC,EAFhB,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKD,MAAM,CAACE,IALZ,CADH,CADL,CARJ,CADJ;AAuBH;;AAED,MAAMC,kBAAkB,GAAG;AACvBlB,EAAAA,kBAAkB,EAAE,MAAMR,MAAM,CAACQ;AADV,CAA3B,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeT,cAAc,CAACC,MAAD,EAAS0B,kBAAT,CAA7B","sourcesContent":["import {Octokit} from '@octokit/core';\nimport React, {useState, useEffect} from 'react';\nimport onClickOutside from 'react-onclickoutside'\n\nfunction Search({options}) {\n    const [query, setQuery] = useState('');\n    const [results, setResults] = useState([]);\n    const [focused, setFocused] = useState(false);\n    Search.handleClickOutside = () => setFocused(false);\n    useEffect(() => {\n        checkResults();\n    }, []);\n\n    let checkResults = () => {\n        query !== '' ?\n                octokit.request('GET /search/repositories', {\n                    q: query,\n                    per_page: 20,\n                }).then((response) => setResults(response.data.items))\n                :\n                setResults([]);\n\n        // setOnSmallScreen(window.innerWidth < 768);\n    };\n\n    const octokit = new Octokit({auth: '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'});\n    return (\n        <div className=\"search-wrapper\">\n            <input\n                value={query}\n                placeholder={\"Find a Repository\"}\n                onChange={(e) => setQuery(e.target.value)}\n                onFocus={() => setFocused(true)}\n            />\n            {focused &&\n            <div className=\"dropdown\">\n                {results.map((result) =>\n                    <div\n                        className=\"option\"\n                        key={result.id}\n                        // onClick={() => addOption(option)}\n                    >\n                        {result.name}\n                    </div>\n                )}\n            </div>\n            }\n        </div>\n    );\n}\n\nconst clickOutsideConfig = {\n    handleClickOutside: () => Search.handleClickOutside\n};\n\n\n\n// class Search extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             focused: false,\n//         };\n//     }\n//\n//     onFocus = () => this.setState({focused: true});\n//\n//     handleClickOutside = () => {\n//         const {focused} = this.state;\n//         focused && this.setState({focused: false});\n//     }\n//\n//     addOption = (option) => {\n//         let repos = JSON.parse(localStorage.getItem('repos'));\n//         repos !== null ? repos.push(option) : repos = new Array(option);\n//         localStorage.setItem('repos', JSON.stringify(repos));\n//     }\n//\n//     setQuery = (query) => {\n//         const {octokit, setResults} = this;\n//         this.setState({query});\n//\n//         query !== '' ?\n//             octokit.request('GET /search/repositories', {\n//                 q: query,\n//                 per_page: 20,\n//             }).then((response) => setResults(response.data.items))\n//             :\n//             setResults([]);\n//     }\n//\n//     render() {\n//         const {onFocus, addOption} = this;\n//         const {focused} = this.state;\n//         const {value, onChange, options} = this.props;\n//         return (\n//             <div className=\"search-wrapper\">\n//                 <input\n//                     value={value}\n//                     placeholder={\"Find a Repository\"}\n//                     onChange={(e) => onChange(e.target.value)}\n//                     onFocus={onFocus}\n//                 />\n//                 {focused &&\n//                 <div className=\"dropdown\">\n//                     {options.map((option) =>\n//                         <div\n//                             className=\"option\"\n//                             key={option.id}\n//                             onClick={() => addOption(option)}\n//                         >\n//                             {option.name}\n//                         </div>\n//                     )}\n//                 </div>\n//                 }\n//             </div>\n//         );\n//     }\n// }\n\nexport default onClickOutside(Search, clickOutsideConfig);\n"]},"metadata":{},"sourceType":"module"}