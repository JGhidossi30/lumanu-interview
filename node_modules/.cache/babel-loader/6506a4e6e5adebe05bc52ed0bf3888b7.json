{"ast":null,"code":"var _jsxFileName = \"/Users/JGhidossi/Downloads/lumanu-interview/src/components/library/Search/component.js\";\nimport React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport Loader from '../Loader';\n\nfunction Search({\n  addRepo,\n  isLoading,\n  results,\n  setQuery,\n  query\n}) {\n  const [focused, setFocused] = useState(false);\n\n  Search.handleClickOutside = () => setFocused(false);\n\n  const onSelect = repo => {\n    addRepo(repo);\n    setFocused(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    placeholder: \"Find a Repository\",\n    onChange: e => setQuery(e.target.value),\n    onFocus: () => setFocused(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), console.log(results), focused && query !== '' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }) : results.map(result => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"option\",\n    key: result.id,\n    onClick: () => onSelect(result),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, result.name))));\n}\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Search.handleClickOutside\n};\nexport default onClickOutside(Search, clickOutsideConfig);","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/components/library/Search/component.js"],"names":["React","useState","onClickOutside","Loader","Search","addRepo","isLoading","results","setQuery","query","focused","setFocused","handleClickOutside","onSelect","repo","e","target","value","console","log","map","result","id","name","clickOutsideConfig"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA,OAArB;AAA8BC,EAAAA,QAA9B;AAAwCC,EAAAA;AAAxC,CAAhB,EAAgE;AAC5D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AACAG,EAAAA,MAAM,CAACQ,kBAAP,GAA4B,MAAMD,UAAU,CAAC,KAAD,CAA5C;;AACA,QAAME,QAAQ,GAAIC,IAAD,IAAU;AACvBT,IAAAA,OAAO,CAACS,IAAD,CAAP;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAEF,KADX;AAEI,IAAA,WAAW,EAAE,mBAFjB;AAGI,IAAA,QAAQ,EAAGM,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;AAII,IAAA,OAAO,EAAE,MAAMN,UAAU,CAAC,IAAD,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOKO,OAAO,CAACC,GAAR,CAAYZ,OAAZ,CAPL,EAQKG,OAAO,IAAID,KAAK,KAAK,EAArB,iBACD;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,SAAS,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGNC,OAAO,CAACa,GAAR,CAAaC,MAAD,iBACR;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,GAAG,EAAEA,MAAM,CAACC,EAFhB;AAGI,IAAA,OAAO,EAAE,MAAMT,QAAQ,CAACQ,MAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKA,MAAM,CAACE,IALZ,CADJ,CAJR,CATJ,CADJ;AA4BH;;AAED,MAAMC,kBAAkB,GAAG;AAACZ,EAAAA,kBAAkB,EAAE,MAAMR,MAAM,CAACQ;AAAlC,CAA3B;AAEA,eAAeV,cAAc,CAACE,MAAD,EAASoB,kBAAT,CAA7B","sourcesContent":["import React, {useState} from 'react';\nimport onClickOutside from 'react-onclickoutside'\nimport Loader from '../Loader';\n\nfunction Search({addRepo, isLoading, results, setQuery, query}) {\n    const [focused, setFocused] = useState(false);\n    Search.handleClickOutside = () => setFocused(false);\n    const onSelect = (repo) => {\n        addRepo(repo);\n        setFocused(false);\n    }\n    return (\n        <div className=\"search-wrapper\">\n            <input\n                value={query}\n                placeholder={\"Find a Repository\"}\n                onChange={(e) => setQuery(e.target.value)}\n                onFocus={() => setFocused(true)}\n            />\n            {console.log(results)}\n            {focused && query !== '' &&\n            <div className=\"dropdown\">\n                {isLoading ?\n                    <Loader/>\n                    :\n                    results.map((result) =>\n                        <div\n                            className=\"option\"\n                            key={result.id}\n                            onClick={() => onSelect(result)}\n                        >\n                            {result.name}\n                        </div>\n                    )\n                }\n            </div>\n            }\n        </div>\n    );\n}\n\nconst clickOutsideConfig = {handleClickOutside: () => Search.handleClickOutside};\n\nexport default onClickOutside(Search, clickOutsideConfig);\n"]},"metadata":{},"sourceType":"module"}