{"ast":null,"code":"import { Octokit } from '@octokit/core';\nimport { put, takeLatest } from \"redux-saga/effects\";\nimport { getResultsFail, getResultsStart, getResultsSuccess } from '../actions/get-results';\nimport types from '../types';\n\nfunction* getResults({\n  query\n}) {\n  try {\n    yield put(getResultsStart());\n\n    if (query !== '') {\n      const octokit = new Octokit({\n        auth: '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'\n      });\n      octokit.request('GET /search/repositories', {\n        q: query,\n        per_page: 20\n      }).then(response => {\n        getResultsSuccess(response.data.items);\n        console.log(\"what\");\n      });\n    } else {\n      getResultsSuccess([]);\n    }\n  } catch (err) {\n    yield put(getResultsFail(err));\n  }\n}\n\nexport default function* getResultsSaga() {\n  yield takeLatest(types.SET_QUERY, getResults);\n}","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/modules/search/sagas/get-results.js"],"names":["Octokit","put","takeLatest","getResultsFail","getResultsStart","getResultsSuccess","types","getResults","query","octokit","auth","request","q","per_page","then","response","data","items","console","log","err","getResultsSaga","SET_QUERY"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,eAAtB;AACA,SAAQC,GAAR,EAAaC,UAAb,QAA8B,oBAA9B;AACA,SAAQC,cAAR,EAAwBC,eAAxB,EAAyCC,iBAAzC,QAAiE,wBAAjE;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,UAAUC,UAAV,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA8B;AAC1B,MAAI;AACA,UAAMP,GAAG,CAACG,eAAe,EAAhB,CAAT;;AAEA,QAAII,KAAK,KAAK,EAAd,EAAkB;AACd,YAAMC,OAAO,GAAG,IAAIT,OAAJ,CAAY;AAACU,QAAAA,IAAI,EAAE;AAAP,OAAZ,CAAhB;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgB,0BAAhB,EAA4C;AACxCC,QAAAA,CAAC,EAAEJ,KADqC;AAExCK,QAAAA,QAAQ,EAAE;AAF8B,OAA5C,EAGGC,IAHH,CAGSC,QAAD,IAAc;AAClBV,QAAAA,iBAAiB,CAACU,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,OAND;AAQH,KAVD,MAUO;AACHd,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH;AACJ,GAhBD,CAgBE,OAAOe,GAAP,EAAY;AACV,UAAMnB,GAAG,CAACE,cAAc,CAACiB,GAAD,CAAf,CAAT;AACH;AACJ;;AAED,eAAe,UAAUC,cAAV,GAA2B;AACtC,QAAMnB,UAAU,CAACI,KAAK,CAACgB,SAAP,EAAkBf,UAAlB,CAAhB;AACH","sourcesContent":["import {Octokit} from '@octokit/core';\nimport {put, takeLatest} from \"redux-saga/effects\";\nimport {getResultsFail, getResultsStart, getResultsSuccess} from '../actions/get-results';\nimport types from '../types';\n\nfunction* getResults({query}) {\n    try {\n        yield put(getResultsStart());\n\n        if (query !== '') {\n            const octokit = new Octokit({auth: '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'});\n            octokit.request('GET /search/repositories', {\n                q: query,\n                per_page: 20,\n            }).then((response) => {\n                getResultsSuccess(response.data.items);\n                console.log(\"what\");\n            }\n            );\n        } else {\n            getResultsSuccess([]);\n        }\n    } catch (err) {\n        yield put(getResultsFail(err));\n    }\n}\n\nexport default function* getResultsSaga() {\n    yield takeLatest(types.SET_QUERY, getResults);\n}\n"]},"metadata":{},"sourceType":"module"}