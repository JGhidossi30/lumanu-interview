{"ast":null,"code":"var _jsxFileName = \"/Users/JGhidossi/Downloads/lumanu-interview/src/library/Search/index.js\";\nimport React, { Component, useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nfunction Search() {\n  const [query, setQuery] = useState('');\n  const [focused, setFocused] = useState(false);\n\n  Search.handleClickOutside = () => setFocused(false);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: query,\n    placeholder: \"Find a Repository\",\n    onChange: e => setQuery(e.target.value),\n    onFocus: () => setFocused(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }));\n}\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Menu.handleClickOutside\n}; // class Search extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             focused: false,\n//         };\n//     }\n//\n//     onFocus = () => this.setState({focused: true});\n//\n//     handleClickOutside = () => {\n//         const {focused} = this.state;\n//         focused && this.setState({focused: false});\n//     }\n//\n//     addOption = (option) => {\n//         let repos = JSON.parse(localStorage.getItem('repos'));\n//         repos !== null ? repos.push(option) : repos = new Array(option);\n//         localStorage.setItem('repos', JSON.stringify(repos));\n//     }\n//\n//     setQuery = (query) => {\n//         const {octokit, setResults} = this;\n//         this.setState({query});\n//\n//         query !== '' ?\n//             octokit.request('GET /search/repositories', {\n//                 q: query,\n//                 per_page: 20,\n//             }).then((response) => setResults(response.data.items))\n//             :\n//             setResults([]);\n//     }\n//\n//     render() {\n//         const {onFocus, addOption} = this;\n//         const {focused} = this.state;\n//         const {value, onChange, options} = this.props;\n//         return (\n//             <div className=\"search-wrapper\">\n//                 <input\n//                     value={value}\n//                     placeholder={\"Find a Repository\"}\n//                     onChange={(e) => onChange(e.target.value)}\n//                     onFocus={onFocus}\n//                 />\n//                 {focused &&\n//                 <div className=\"dropdown\">\n//                     {options.map((option) =>\n//                         <div\n//                             className=\"option\"\n//                             key={option.id}\n//                             onClick={() => addOption(option)}\n//                         >\n//                             {option.name}\n//                         </div>\n//                     )}\n//                 </div>\n//                 }\n//             </div>\n//         );\n//     }\n// }\n\nexport default onClickOutside(Search);","map":{"version":3,"sources":["/Users/JGhidossi/Downloads/lumanu-interview/src/library/Search/index.js"],"names":["React","Component","useState","onClickOutside","Search","query","setQuery","focused","setFocused","handleClickOutside","e","target","value","clickOutsideConfig","Menu"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;AAEA,SAASC,MAAT,GAAkB;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;;AACAE,EAAAA,MAAM,CAACK,kBAAP,GAA4B,MAAMD,UAAU,CAAC,KAAD,CAA5C;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,KAAK,EAAEH,KADX;AAEI,IAAA,WAAW,EAAE,mBAFjB;AAGI,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;AAII,IAAA,OAAO,EAAE,MAAMJ,UAAU,CAAC,IAAD,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAuBH;;AAED,MAAMK,kBAAkB,GAAG;AACvBJ,EAAAA,kBAAkB,EAAE,MAAMK,IAAI,CAACL;AADR,CAA3B,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeN,cAAc,CAACC,MAAD,CAA7B","sourcesContent":["import React, {Component, useState} from 'react';\nimport onClickOutside from 'react-onclickoutside'\n\nfunction Search() {\n    const [query, setQuery] = useState('');\n    const [focused, setFocused] = useState(false);\n    Search.handleClickOutside = () => setFocused(false);\n    return (\n        <div className=\"search-wrapper\">\n            <input\n                value={query}\n                placeholder={\"Find a Repository\"}\n                onChange={(e) => setQuery(e.target.value)}\n                onFocus={() => setFocused(true)}\n            />\n            {/*{focused &&*/}\n            {/*<div className=\"dropdown\">*/}\n            {/*    {options.map((option) =>*/}\n            {/*        <div*/}\n            {/*            className=\"option\"*/}\n            {/*            key={option.id}*/}\n            {/*            onClick={() => addOption(option)}*/}\n            {/*        >*/}\n            {/*            {option.name}*/}\n            {/*        </div>*/}\n            {/*    )}*/}\n            {/*</div>*/}\n            {/*}*/}\n        </div>\n    );\n}\n\nconst clickOutsideConfig = {\n    handleClickOutside: () => Menu.handleClickOutside\n};\n\n\n\n// class Search extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             focused: false,\n//         };\n//     }\n//\n//     onFocus = () => this.setState({focused: true});\n//\n//     handleClickOutside = () => {\n//         const {focused} = this.state;\n//         focused && this.setState({focused: false});\n//     }\n//\n//     addOption = (option) => {\n//         let repos = JSON.parse(localStorage.getItem('repos'));\n//         repos !== null ? repos.push(option) : repos = new Array(option);\n//         localStorage.setItem('repos', JSON.stringify(repos));\n//     }\n//\n//     setQuery = (query) => {\n//         const {octokit, setResults} = this;\n//         this.setState({query});\n//\n//         query !== '' ?\n//             octokit.request('GET /search/repositories', {\n//                 q: query,\n//                 per_page: 20,\n//             }).then((response) => setResults(response.data.items))\n//             :\n//             setResults([]);\n//     }\n//\n//     render() {\n//         const {onFocus, addOption} = this;\n//         const {focused} = this.state;\n//         const {value, onChange, options} = this.props;\n//         return (\n//             <div className=\"search-wrapper\">\n//                 <input\n//                     value={value}\n//                     placeholder={\"Find a Repository\"}\n//                     onChange={(e) => onChange(e.target.value)}\n//                     onFocus={onFocus}\n//                 />\n//                 {focused &&\n//                 <div className=\"dropdown\">\n//                     {options.map((option) =>\n//                         <div\n//                             className=\"option\"\n//                             key={option.id}\n//                             onClick={() => addOption(option)}\n//                         >\n//                             {option.name}\n//                         </div>\n//                     )}\n//                 </div>\n//                 }\n//             </div>\n//         );\n//     }\n// }\n\nexport default onClickOutside(Search);\n"]},"metadata":{},"sourceType":"module"}